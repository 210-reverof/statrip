<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wonsi.statrip.model.repository.plan.PlanRepository">

	<insert id="insertPlan" useGeneratedKeys="true" keyProperty="planId" keyColumn="plan_id">
		INSERT INTO plan (user_id, title, attraction_cnt, attraction_weight, created_at)
  		VALUES (#{userId}, #{title}, #{attractionCnt}, #{attractionWeight}, NOW())
	</insert>
	
	<insert id="insertPlanPresent1">
  		UPDATE plan 
  		SET present1 = #{attractionId}
	    WHERE plan_id = #{planId}
	</insert>
  	
  	<insert id="insertPlanPresent2">
	    UPDATE plan 
  		SET present2 = #{attractionId}
	    WHERE plan_id = #{planId}
  	</insert>
  	
  	<insert id="insertPlanPresent3">
	    UPDATE plan 
  		SET present3 = #{attractionId}
	    WHERE plan_id = #{planId}
  	</insert>
	
	<insert id="insertPlanAttrs">
	    INSERT INTO plan_relation (plan_id, attraction_id, ord) 
	    VALUES(#{param1}, #{param2}, #{param3})
  	</insert>
  	
  	<select id="selectMyList" parameterType="String" resultType="PlanListResDto">
		SELECT plan_id AS planId, user_id AS userId, plan.title AS title, created_at AS createdAt,
		present1, present2, present3, attraction_cnt as attractionCnt, attraction_weight as attractionWeight,
		attraction1.first_image AS img1,
		attraction2.first_image AS img2,
		attraction3.first_image AS img3
		FROM plan
		LEFT JOIN attraction_info AS attraction1 ON plan.present1 = attraction1.content_id
		LEFT JOIN attraction_info AS attraction2 ON plan.present2 = attraction2.content_id
		LEFT JOIN attraction_info AS attraction3 ON plan.present3 = attraction3.content_id
		WHERE user_id = #{userId}
		ORDER BY plan_id DESC
	</select>

	<select id="selectPlan" parameterType="int" resultType="PlanResDto">
		SELECT plan_id AS planId, user_id AS userId, title, created_at AS createdAt
		FROM plan
		WHERE plan_id = #{planId}
	</select>
	
	<delete id="deletePlanRelation" parameterType="int"> 
		DELETE FROM plan_relation
		WHERE plan_id = #{planId};
	</delete>
	
	<delete id="deletePlan" parameterType="int"> 
		DELETE FROM plan WHERE plan_id = #{planId};
	</delete>
	
	<delete id="deleteShareByPlan" parameterType="int"> 
		DELETE FROM share_article WHERE plan_id = #{planId};
	</delete>

	<select id="selectPlanAttrs" parameterType="int" resultType="PlanAttrDto">
		SELECT visited, r.`ord` AS `number`, i.content_id AS contentId, content_type_id AS contentTypeId, overview, title, addr1, first_image AS firstImage, i.sido_code AS sidoCode, s.sido_name AS sidoName, i.gugun_code AS gugunCode, g.gugun_name AS gugunName, latitude, longitude
		FROM plan_relation r
		JOIN attraction_info i on i.content_id = r.attraction_id
		JOIN attraction_description d ON i.content_id = d.content_id
		JOIN sido s ON i.sido_code = s.sido_code
		JOIN gugun g ON i.sido_code = g.sido_code AND i.gugun_code = g.gugun_code
		WHERE r.plan_id = #{planId}
		ORDER BY r.ord
	</select>

	<select id="getRelatedPlanIds" resultType="Integer">
		SELECT plan_id AS planId
		FROM plan
		WHERE user_id IN (
		SELECT following_id
		FROM follow
		WHERE follower_id = #{userId}
		) AND plan_id IN (
		SELECT plan_id
		FROM plan_relation
		WHERE attraction_id IN
		<foreach item="attrId" collection="selectedAttrs" open="(" separator="," close=")">
			#{attrId}
		</foreach>
		GROUP BY plan_id
		HAVING COUNT(DISTINCT attraction_id) = #{size}
		)
	</select>
	
	<select id="AllList" parameterType="String" resultType="PlanListResDto">
		SELECT plan_id AS planId, user_id AS userId, plan.title AS title, 
		attraction_cnt as attractionCnt, attraction_weight as attractionWeight, created_at AS createdAt,
		present1, present2, present3,
		attraction1.first_image AS img1,
		attraction2.first_image AS img2,
		attraction3.first_image AS img3
		FROM plan
		LEFT JOIN attraction_info AS attraction1 ON plan.present1 = attraction1.content_id
		LEFT JOIN attraction_info AS attraction2 ON plan.present2 = attraction2.content_id
		LEFT JOIN attraction_info AS attraction3 ON plan.present3 = attraction3.content_id
		ORDER BY plan_id DESC
	</select>
	
	<select id="followList" parameterType="String" resultType="PlanListResDto">
		SELECT plan_id AS planId, user_id AS userId, plan.title AS title, 
		attraction_cnt as attractionCnt, attraction_weight as attractionWeight, created_at AS createdAt,
		present1, present2, present3,
		attraction1.first_image AS img1,
		attraction2.first_image AS img2,
		attraction3.first_image AS img3
		FROM plan
		LEFT JOIN attraction_info AS attraction1 ON plan.present1 = attraction1.content_id
		LEFT JOIN attraction_info AS attraction2 ON plan.present2 = attraction2.content_id
		LEFT JOIN attraction_info AS attraction3 ON plan.present3 = attraction3.content_id
		WHERE user_id IN (
		SELECT following_id
		FROM follow
		WHERE follower_id = #{userId}
		)
		ORDER BY plan_id DESC
	</select>

</mapper>